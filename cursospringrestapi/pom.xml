<?xml version="1.0" encoding="UTF-8"?>
<!--
O arquivo pom.xml define a estrutura do projeto Maven:
as dependÃªncias, plugins, versÃ£o do Java, tipo de empacotamento (JAR/WAR) e muito mais.
-->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

    <!-- Modelo padrÃ£o do Maven -->
    <modelVersion>4.0.0</modelVersion>

    <!-- O projeto herda configuraÃ§Ãµes do Spring Boot -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.5.6</version>
        <relativePath/> <!-- Faz o Maven buscar o parent no repositÃ³rio remoto -->
    </parent>

    <!-- IdentificaÃ§Ã£o do seu projeto -->
    <groupId>curso.api.rest</groupId> <!-- Pacote base -->
    <artifactId>cursospringrestapi</artifactId> <!-- Nome do artefato gerado -->
    <version>0.0.1-SNAPSHOT</version> <!-- VersÃ£o -->
    <packaging>war</packaging> <!-- Tipo de empacotamento (WAR = deploy em Tomcat externo) -->

    <name>cursospringrestapi</name>
    <description>Curso API REST Spring Boot</description>

    <!-- Campos opcionais -->
    <url/>
    <licenses>
        <license/>
    </licenses>
    <developers>
        <developer/>
    </developers>
    <scm>
        <connection/>
        <developerConnection/>
        <tag/>
        <url/>
    </scm>

    <!-- VersÃ£o do Java usada -->
    <properties>
        <java.version>17</java.version>
        <maven.test.skip>true</maven.test.skip>
    </properties>

    <!-- ========================================= -->
    <!-- ðŸ§© DEPENDÃŠNCIAS DO PROJETO -->
    <!-- ========================================= -->
    <dependencies>

        <!-- Spring Data JPA: acesso ao banco com Hibernate -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <!-- JDBC: acesso direto ao banco (sem ORM) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>


        <!-- Spring Web: cria controladores REST, MVC e APIs -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>



		<!-- Tomcat: servidor web.
             'provided' = nÃ£o embute o Tomcat dentro do WAR (serÃ¡ usado o Tomcat externo). -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
        </dependency>

		<!-- Testes automatizados com Spring Boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

		<!-- Driver do PostgreSQL -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>



		<!-- DevTools: recarrega automaticamente o projeto ao salvar (modo dev) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
        </dependency>
    </dependencies>

    <!-- ========================================= -->
    <!-- ðŸ”§ CONFIGURAÃ‡ÃƒO DE BUILD -->
    <!-- ========================================= -->
    <build>
        <plugins>
            <!-- Plugin do Spring Boot: empacota, roda e gera WAR/JAR -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>
